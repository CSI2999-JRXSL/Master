/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ScribEditor;

/**
 *
 * @author plpps
 */
public class ScribPadGui extends javax.swing.JFrame {

    /**
     * Creates new form ScribPadGui
     */
    public ScribPadGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        quickToolBar = new javax.swing.JToolBar();
        newFileQuickButton = new javax.swing.JButton();
        openFileQuickButton = new javax.swing.JButton();
        saveFileQuickButton = new javax.swing.JButton();
        copyTextQuickButton = new javax.swing.JButton();
        cutTextQuickButton = new javax.swing.JButton();
        pasteTextQuickButton = new javax.swing.JButton();
        highlightQuickButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jMenuBar1 = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        newFile = new javax.swing.JMenuItem();
        openFile = new javax.swing.JMenuItem();
        saveFile = new javax.swing.JMenuItem();
        saveAsFile = new javax.swing.JMenuItem();
        PrintFile = new javax.swing.JMenuItem();
        exitFile = new javax.swing.JMenuItem();
        editMenu = new javax.swing.JMenu();
        cutText = new javax.swing.JMenuItem();
        copyText = new javax.swing.JMenuItem();
        pasteText = new javax.swing.JMenuItem();
        fontEditMenu = new javax.swing.JMenu();
        fontNameMenuItem = new javax.swing.JMenu();
        fontSizeMenuItem = new javax.swing.JMenu();
        jMenu1 = new javax.swing.JMenu();
        fontBoldMenuItem = new javax.swing.JMenuItem();
        fontItalicMenuItem = new javax.swing.JMenuItem();
        fontUnderlineMenuItem = new javax.swing.JMenuItem();
        fontColorMenuItem = new javax.swing.JMenuItem();
        searchMenu = new javax.swing.JMenu();
        findChar = new javax.swing.JMenuItem();
        findNextChar = new javax.swing.JMenuItem();
        findPreChar = new javax.swing.JMenuItem();
        replaceText = new javax.swing.JMenuItem();
        toolMenu = new javax.swing.JMenu();
        jMenuItem16 = new javax.swing.JMenuItem();
        jMenuItem17 = new javax.swing.JMenuItem();
        jMenuItem18 = new javax.swing.JMenuItem();
        settingMenu = new javax.swing.JMenu();
        fontColorMenu = new javax.swing.JMenu();
        fontHighlightColorMenuItem = new javax.swing.JMenuItem();
        jMenuItem19 = new javax.swing.JMenuItem();
        jMenuItem20 = new javax.swing.JMenuItem();
        jMenuItem21 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        quickToolBar.setRollover(true);
        quickToolBar.setAlignmentY(0.5F);

        newFileQuickButton.setText("New");
        newFileQuickButton.setToolTipText("New");
        newFileQuickButton.setFocusable(false);
        newFileQuickButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        newFileQuickButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        quickToolBar.add(newFileQuickButton);

        openFileQuickButton.setText("Open");
        openFileQuickButton.setToolTipText("Open");
        openFileQuickButton.setFocusable(false);
        openFileQuickButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        openFileQuickButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        quickToolBar.add(openFileQuickButton);

        saveFileQuickButton.setText("Save");
        saveFileQuickButton.setToolTipText("Save");
        saveFileQuickButton.setFocusable(false);
        saveFileQuickButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        saveFileQuickButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        saveFileQuickButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileQuickButtonActionPerformed(evt);
            }
        });
        quickToolBar.add(saveFileQuickButton);

        copyTextQuickButton.setText("Copy");
        copyTextQuickButton.setToolTipText("Copy");
        copyTextQuickButton.setFocusable(false);
        copyTextQuickButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        copyTextQuickButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        quickToolBar.add(copyTextQuickButton);

        cutTextQuickButton.setText("Cut");
        cutTextQuickButton.setToolTipText("Cut");
        cutTextQuickButton.setFocusable(false);
        cutTextQuickButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        cutTextQuickButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        quickToolBar.add(cutTextQuickButton);

        pasteTextQuickButton.setText("Paste");
        pasteTextQuickButton.setToolTipText("Paste");
        pasteTextQuickButton.setFocusable(false);
        pasteTextQuickButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        pasteTextQuickButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        quickToolBar.add(pasteTextQuickButton);

        highlightQuickButton.setText("Hightlight");
        highlightQuickButton.setToolTipText("Highlight");
        highlightQuickButton.setFocusable(false);
        highlightQuickButton.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        highlightQuickButton.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        quickToolBar.add(highlightQuickButton);

        jScrollPane1.setViewportView(jTextPane1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(quickToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, 577, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(quickToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE))
        );

        fileMenu.setText("File");

        newFile.setText("New");
        fileMenu.add(newFile);

        openFile.setText("Open");
        fileMenu.add(openFile);

        saveFile.setText("Save");
        saveFile.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveFileActionPerformed(evt);
            }
        });
        fileMenu.add(saveFile);

        saveAsFile.setText("Save As");
        fileMenu.add(saveAsFile);

        PrintFile.setText("Print");
        fileMenu.add(PrintFile);

        exitFile.setText("Exit");
        fileMenu.add(exitFile);

        jMenuBar1.add(fileMenu);

        editMenu.setText("Edit");

        cutText.setText("Cut");
        editMenu.add(cutText);

        copyText.setText("Copy");
        editMenu.add(copyText);

        pasteText.setText("Paste");
        editMenu.add(pasteText);

        fontEditMenu.setText("Font");

        fontNameMenuItem.setText("Name");
        fontEditMenu.add(fontNameMenuItem);

        fontSizeMenuItem.setText("Size");

        jMenu1.setText("jMenu1");
        fontSizeMenuItem.add(jMenu1);

        fontEditMenu.add(fontSizeMenuItem);

        fontBoldMenuItem.setText("Bold");
        fontEditMenu.add(fontBoldMenuItem);

        fontItalicMenuItem.setText("Italic");
        fontEditMenu.add(fontItalicMenuItem);

        fontUnderlineMenuItem.setText("Underline");
        fontEditMenu.add(fontUnderlineMenuItem);

        fontColorMenuItem.setText("Color");
        fontEditMenu.add(fontColorMenuItem);

        editMenu.add(fontEditMenu);

        jMenuBar1.add(editMenu);

        searchMenu.setText("Search");

        findChar.setText("Find");
        searchMenu.add(findChar);

        findNextChar.setText("Find Next");
        searchMenu.add(findNextChar);

        findPreChar.setText("Find Previous");
        searchMenu.add(findPreChar);

        replaceText.setText("Replace");
        searchMenu.add(replaceText);

        jMenuBar1.add(searchMenu);

        toolMenu.setText("Tools");

        jMenuItem16.setText("jMenuItem1");
        toolMenu.add(jMenuItem16);

        jMenuItem17.setText("jMenuItem1");
        toolMenu.add(jMenuItem17);

        jMenuItem18.setText("jMenuItem1");
        toolMenu.add(jMenuItem18);

        jMenuBar1.add(toolMenu);

        settingMenu.setText("Setting");

        fontColorMenu.setText("Color");

        fontHighlightColorMenuItem.setText("Highlight Color");
        fontColorMenu.add(fontHighlightColorMenuItem);

        settingMenu.add(fontColorMenu);

        jMenuItem19.setText("jMenuItem1");
        settingMenu.add(jMenuItem19);

        jMenuItem20.setText("jMenuItem1");
        settingMenu.add(jMenuItem20);

        jMenuItem21.setText("jMenuItem1");
        settingMenu.add(jMenuItem21);

        jMenuBar1.add(settingMenu);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveFileActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveFileActionPerformed

    private void saveFileQuickButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveFileQuickButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_saveFileQuickButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ScribPadGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ScribPadGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ScribPadGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ScribPadGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ScribPadGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem PrintFile;
    private javax.swing.JMenuItem copyText;
    private javax.swing.JButton copyTextQuickButton;
    private javax.swing.JMenuItem cutText;
    private javax.swing.JButton cutTextQuickButton;
    private javax.swing.JMenu editMenu;
    private javax.swing.JMenuItem exitFile;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem findChar;
    private javax.swing.JMenuItem findNextChar;
    private javax.swing.JMenuItem findPreChar;
    private javax.swing.JMenuItem fontBoldMenuItem;
    private javax.swing.JMenu fontColorMenu;
    private javax.swing.JMenuItem fontColorMenuItem;
    private javax.swing.JMenu fontEditMenu;
    private javax.swing.JMenuItem fontHighlightColorMenuItem;
    private javax.swing.JMenuItem fontItalicMenuItem;
    private javax.swing.JMenu fontNameMenuItem;
    private javax.swing.JMenu fontSizeMenuItem;
    private javax.swing.JMenuItem fontUnderlineMenuItem;
    private javax.swing.JButton highlightQuickButton;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem16;
    private javax.swing.JMenuItem jMenuItem17;
    private javax.swing.JMenuItem jMenuItem18;
    private javax.swing.JMenuItem jMenuItem19;
    private javax.swing.JMenuItem jMenuItem20;
    private javax.swing.JMenuItem jMenuItem21;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JMenuItem newFile;
    private javax.swing.JButton newFileQuickButton;
    private javax.swing.JMenuItem openFile;
    private javax.swing.JButton openFileQuickButton;
    private javax.swing.JMenuItem pasteText;
    private javax.swing.JButton pasteTextQuickButton;
    private javax.swing.JToolBar quickToolBar;
    private javax.swing.JMenuItem replaceText;
    private javax.swing.JMenuItem saveAsFile;
    private javax.swing.JMenuItem saveFile;
    private javax.swing.JButton saveFileQuickButton;
    private javax.swing.JMenu searchMenu;
    private javax.swing.JMenu settingMenu;
    private javax.swing.JMenu toolMenu;
    // End of variables declaration//GEN-END:variables
}
